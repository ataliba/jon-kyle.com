{"/about":{"title":"About","view":"about","text":"Los Angeles, Calif.\n\n[contact@jon-kyle.com](contact@jon-kyle.com)\n\n[Github](https://github.com/jondashkyle/jon-kyle.com), [Twitter](http://twitter.com/jondashkyle), [Arena](https://www.are.na/jon-kyle-mohr/)","ongoing":"Design and development (2009–2016) at [Cargo Collective](http://cargocollective.com) and [Persona](http://persona.co) for several years. Contributions to interface design, user customizable front-end architecture, etc.\n\n[Hardly Everything](http://hardlyeverything.com), a private feed and bookmarking tool, emphasis on cadence and data ownership.\n\n[A line moving across a window once every year](http://a-line-moving-across-a-window-once-every-year.com/), [Background color fading from black to white every century](bgcolor-fading-from-black-to-white-every-century.com)\n\n[Walking](http://walking.jon-kyle.com), in places.\n\n[Peer-to-Peer Web](http://peer-to-peer-web.com), a day of casual conversation and open workshops on using the peer-to-peer web within your practice and daily life.","collaborations":"Commissioned sites, design and development, for [Red Bull Music Academy](http://labels.redbullmusicacademy.com/). [Endless 80s NYC](http://labels.redbullmusicacademy.com/), an anthology of 80s dance labels. [Shattered Streams](http://daily.redbullmusicacademy.com/specials/2016-shattered-streams/), a month-long experiment in musical ephemerality, presenting original music from William Basinski, Fennesz, and more.\n\n[2pac](http://2pac.com), Morphosis Architects (Thom Mayne), [East of Borneo](http://eastofborneo.net), and [Machine Project](http://machineproject.com) with [Folder Studio](http://folderstudio.com) (development.)\n\nGuest art direction and development for Bloomberg, [The Ether Thief](https://www.bloomberg.com/features/2017-the-ether-thief/) about the Ethereum DAO exploit.\n\nDevelopment for [Hassan Rahim](http://hassanrahim.com)’s personal site.\n\nDevelopment for [Nicholas Cope](http://nicholascope.com) with [Hassan Rahim](http://hassanrahim.com) and [Raf Rennie](http://rafrennie.com/).","misc":"Collaborating with [Anenon](http://brianallensimon.com) on drums, beginning in 2010. [Sagrada](http://nonprojects.net/catalog/sagrada), [Petrol](https://anenon.bandcamp.com/album/petrol). European tour 2016 (Madeiradig, Berghain, Le Rocher De Palmer and more). RBMA Fest NYC, MOCA, The Broad.\n\nAn interview, [Between Broadcast and Community: The Design of Virtual Spaces](https://www.theatlantic.com/technology/archive/2013/09/between-broadcast-and-community-the-design-of-virtual-spaces/279763/?utm_source=feed), The Atlantic","name":"about","path":"/content/about","url":"/about","files":{},"pages":{}},"/entries":{"title":"Entries","view":"entries","text":"","name":"entries","path":"/content/entries","url":"/entries","files":{},"pages":{"2017-08-01-distributed-now":{"name":"2017-08-01-distributed-now","path":"/content/entries/2017-08-01-distributed-now","url":"/entries/2017-08-01-distributed-now","source":"/content/entries/2017-08-01-distributed-now"},"2017-08-19-platform-death":{"name":"2017-08-19-platform-death","path":"/content/entries/2017-08-19-platform-death","url":"/entries/2017-08-19-platform-death","source":"/content/entries/2017-08-19-platform-death"},"2017-10-26-dropout":{"name":"2017-10-26-dropout","path":"/content/entries/2017-10-26-dropout","url":"/entries/2017-10-26-dropout","source":"/content/entries/2017-10-26-dropout"},"2017-12-12-peer-paths":{"name":"2017-12-12-peer-paths","path":"/content/entries/2017-12-12-peer-paths","url":"/entries/2017-12-12-peer-paths","source":"/content/entries/2017-12-12-peer-paths"},"2017-12-27-sites":{"name":"2017-12-27-sites","path":"/content/entries/2017-12-27-sites","url":"/entries/2017-12-27-sites","source":"/content/entries/2017-12-27-sites"}}},"/entries/2017-08-01-distributed-now":{"title":"Distributed Now","date":"17-08-01","tags":["www"],"text":"There was supposed to be a big push yesterday for Net Neutrality. In practice, Google posted a modest blog entry, and a few sites displayed lo-res images. It’s impossible to know how long the open web will last, but clearly the situation as we have known it [is not improving](https://www.are.na/jon-kyle-mohr/tech-ethnography). \n\nThere are a few projects pointing towards possible futures that have me very excited despite this.\n\nI’m most hopeful of [Dat](http://datproject.org) and [Beaker](https://beakerbrowser.com). You can think of Dat like a mix of Dropbox and Github, but your files aren’t stored on corporate servers. Instead, they are transferred directly between those exchanging the files, with no middleman.\n\nAt first Dat was used to transfer large scientific datasets, but it happens to be a great way of distributing websites between peers. Beaker Browser uses Dat to let you self-publish online, save sites for offline, and re-host for others.\n\nBoth of these projects have matured to the point of being immediately usable.\n\nSo, this weekend, partly as my contribution to whatever the “Net Neutrality awareness” day was, I moved my personal site off of Amazon’s servers and onto Dat, a distributed peer-to-peer system.\n\nYou can visit my site now via:\n\n- [https://jon-kyle.com](https://jon-kyle.com)\n- [dat://jon-kyle.com](dat://jon-kyle.com)\n- [https://hello-jkm.hashbase.io](https://hello-jkm.hashbase.io)\n- [dat://7ab5ad001ae720e877fe038ac830e2ca2b87a6beac66d56aed0549619cb2ec6e](dat://7ab5ad001ae720e877fe038ac830e2ca2b87a6beac66d56aed0549619cb2ec6e)\n\nIf you visit my site at `https://` in Beaker, you’ll see in the address bar “P2P version available”, which you can click to view the `dat://`, and become a peer.\n\n## Getting started\n\nSince Dat is peer-to-peer, you may be wondering how to ensure it’s constantly accessible, or how to add a domain name. Basic.\n\nBeaker has created a p2p host called [Hashbase](http://hashbase.io). All it requires is pasting the URL to a Dat Archive. You can [start today](https://hashbase.io/). You can also setup your own server with [dathttpd](https://github.com/beakerbrowser/dathttpd) to manage your Dats and auto configure SSL. Going fully manual isn’t much work, too:\n\n- Install Dat on your server\n- Clone your site’s Dat Archive\n- Configure the Archive directory as your web root\n- Add Dat’s `sync` command to `systemctl`, or equivalent.\n\n```\n// install dat globally\nnpm install -g dat\n\n// clone your archive\ndat clone dat://7ab5ad001ae720e877fe038ac830e2ca2b87a6beac66d56aed0549619cb2ec6e jon-kyle.com\n\n// sync\ndat sync jon-kyle.com\n```\n\nDoing this turns your site into a persistent peer, ensuring anyone can access your site anytime, either by visiting your domain, or using Beaker, or anything else using Dat.\n\n## Data\n\nBeaker also exposes interesting [Web APIs](https://beakerbrowser-com-pfrazee.hashbase.io/docs/apis/) to let you modify the contents of a Dat Archive. For instance, instead of storing user data in a proprietary database, you can write data to a Dat Archive, providing users autonomy and ownership.\n\nDat Archives also have built in version control. History, merging and reverting to previous versions of data are baked in.\n\n## What about blockchain\n\nWithout getting into it; while blockchains are promising, their value is derived from artificial scarcity. Far more interesting are truly distributed systems, torrent-like, which [promote abundance](https://twitter.com/yoshuawuyts/status/883284383301603328).\n\n## The future web\n\n\nObserving the proliferation of machine learning, AI, and AR/VR in our daily lives, I can’t help but be excited about the technology, but increasingly anxious about who the technology will be serving, and what for.\n\nAnyone working with the internet today has a responsibility to take time exploring distributed alternatives, and begin integrating them into their practices, as it will only become increasingly important.","name":"2017-08-01-distributed-now","path":"/content/entries/2017-08-01-distributed-now","url":"/entries/2017-08-01-distributed-now","files":{},"pages":{}},"/entries/2017-08-19-platform-death":{"title":"Platform Death","date":"17-08-10","tags":["www"],"text":"The other week there were rumors about [Soundcloud shutting down](https://techcrunch.com/2017/07/12/soundshroud/). They cut 40 percent of their staff, and word was that they’d run out of money within 100 days.\n\nI was going to write something at that time about the trend of platforms dying, not because they lack vibrant communities, but because those communities fail to hit current astronomical revenue expectations (e.g. Vine).\n\nWhile talking about this with some of the [DAT](http://datproject.org) community, we quickly had the idea to create a js module and page which could scrape Soundcloud pages into DAT archives. So, instead of writing about it, I [made a page](http://soundsalvage.jon-kyle.com) using Mafintosh’s module ([soundcloud-to-dat](https://github.com/mafintosh/soundcloud-to-dat)) to provide a tool to archive Soundcloud tracks and introduce a few people to DAT.\n\nNot only did it back up tracks to a DAT archive, it also created a small json file, which when paired with some included javascript and html was able to create a fully p2p webpage, viewable with [Beaker Browser](http://beakerbrowser.com).\n\nNow that some time has passed, and we have seen how this particular instance [has played out](https://www.theverge.com/2017/8/11/16131854/soundcloud-ceo-steps-aside-new-funding), it seems ok to circle around and mention a few passing thoughts on this.\n\nSoundcloud is a good example of a project with modest ambition gaining traction with subcultures who then elevate it to a place of relevance. As that growth is recognized, the gears of homogeneity start to turn, and the intent shifts from being one of creating something interesting to creating something larger.\n\nIn a case like Soundcloud, the platform can not grow to the scale expected by investors without alienating the underground cultures credited with making it relevant in the first place.\n\nThis isn’t a criticism of Soundcloud as much as it is the status quo. Growth is necessary for success in such a competitive market, but it currently feels a bit excessive.\n\nAnyway, the [response](https://twitter.com/jondashkyle/status/885945354507751426) to the [Soundcloud archive](http://soundsalvage.jon-kyle.com) project made it personally clear that there is a demand for projects touching on these ideas. Specifically, projects which grow outward and not just upward.\n\nAfter sharing the Soundcloud project, I started working on a way to expand on the included simple html and json page. This led to working on a few ideas I’ve had in mind for a while, and that has taken form as [Enoki](https://enoki.site/). I’m looking forward to sharing more about that soon.\n\n1. I also suggest reading [Mat Dryhurst’s interview in Wire](https://www.thewire.co.uk/in-writing/interviews/robert-barry-talks-to-mat-dryhurst-about-soundcloud) for a more involved set of ideas about Soundcloud and ownership.","name":"2017-08-19-platform-death","path":"/content/entries/2017-08-19-platform-death","url":"/entries/2017-08-19-platform-death","files":{},"pages":{}},"/entries/2017-10-26-dropout":{"title":"Dropout","date":"17-10-26","description":"A tool for habit forming","tags":["www"],"text":"I’ve been on the internet since I was seven or eight. Got my own machine when I was around ten, a hand-me-down. That’s also around when I stopped going to school. We lived in a small town of around 2500. With a connection the browser was truly my window to the world.\n\nThe internet felt really big then.\n\nI’ve been going offline here and there recently. I’ll connect for a minute to load my inbox in the morning, then go offline and reconnect to send them.\n\nI’ll work on a project, making notes as I run into problems instead of searching for an answer immediately. After they accumulate for a while I’ll go online to find the answers. The answers tend to stick better that way, too.\n\nGrowing up with a connection from a very young age, and being connected all day (and sometimes all night) the internet became integral to how my brain works. Turning it off feels like a lobotomy, but having a constant connection is sort of like running my faucet all day, regardless of if I’m filling my cup.\n\nWhen I find myself wandering online I’ll sometimes come across something interesting. But even if I care about it deeply, my attention will drift. Not an accident so much as it is the result of effective design and years of personal exposure.\n\nWhen coming across these things I wanted a way to save them to read offline. Didn’t want to use a platform. Didn’t want to use an app. Just wanted a tool.\n\nI put together `dropout` for myself, but you can also use it, both as a command line interface and js module. All it does right now is save a url as static html/json for later offline access and personal archive.\n\nYou can install it via `npm install dropout -g`. Head to the repository to [scope the source and view documentation](https://github.com/jondashkyle/dropout).\n\nAs always, very excited about future networks and hope to see you there.\n\n---\n\n## Update 10/29/2017\n\nThe response to releasing this, though modest, was [unanticipated and appreciated](https://twitter.com/jondashkyle/status/923948416723324928) for what it is. Thanks!\n\nTo make it more widely usable, I created a full webapp providing you an interface for managing your offline library. It runs in [Beaker Browser](beakerbrowser.com) and saves your data to a Dat Archive, which remain as static files on your machine.\n\n![](dropout-beaker.png)\n\n[video](dropout-beaker.mp4)\n\nTo give it a try, simply navigate to [dropout.jon-kyle.com](https://dropout.jon-kyle.com). Additional documentation is waiting for you [in the repository](https://github.com/jondashkyle/dropout-app).\n\nIn addition to being immediately useful, I hope this provides a useful example of how to use Choo and Beaker to create a fully functional webapp, emphasizing the ideas expressed above.\n\n---\n\n1. I like what [Graham Mckay](https://misfitsarchitecture.com/2017/10/19/naked-houses/) recently noted on Misfits’ Architecture about Gustave Flaubert, unbookmarking and the propagation of good ideas.","name":"2017-10-26-dropout","path":"/content/entries/2017-10-26-dropout","url":"/entries/2017-10-26-dropout","files":{"dropout-beaker.mp4":{"name":"dropout-beaker","path":"/content/entries/2017-10-26-dropout/dropout-beaker.mp4","url":"/entries/2017-10-26-dropout/dropout-beaker.mp4","source":"/content/entries/2017-10-26-dropout/dropout-beaker.mp4","extension":".mp4","filename":"dropout-beaker.mp4","type":"video"},"dropout-beaker.png":{"name":"dropout-beaker","path":"/content/entries/2017-10-26-dropout/dropout-beaker.png","url":"/entries/2017-10-26-dropout/dropout-beaker.png","source":"/content/entries/2017-10-26-dropout/dropout-beaker.png","extension":".png","filename":"dropout-beaker.png","type":"image"}},"pages":{}},"/entries/2017-12-12-peer-paths":{"title":"Peer Paths","view":"entry","date":"17-12-12","tags":["www"],"text":"I made a simple single page site as an archive for [Peer-to-Peer Web / Los Angeles](http://peer-to-peer-web.com/los-angeles). The total size of the directory is around 550mb; large for such a simple page as it contains several long video files. Considering the spirit of the project, the videos wanted to be hosted outside of centralized platforms, like Youtube or Vimeo.\n\nSelf-hosting video on a shared server is expensive, both in storage and accrued bandwidth fees. CDNs make this cheaper<sup>1</sup>, but continue placing money in the pockets of monolithic tech companies. The question was how to circumnavigate these platforms in an economic way. I found the answer in recontextualizing a tactic increasingly used by failing media corporations; the pay-wall.\n\nInstead of requiring payment, and limiting access to those who can afford it, you are asked to share a resource.\n\nYou are able to stream around 15 minutes of video when visiting the page with a traditional browser as you are directly accessing the media from a central point—my server, which can be expensive.\n\nIn this solution, to access an unlimited stream it’s requested you assist in making the content available to others by visiting the page in a p2p-enabled browser, or syncing the archive to your machine.\n\nAs the number of requests to view the content increases, so too does the number of those providing the content, effectively removing the need for a pay-wall to generate revenue for supporting centralized infrastructure.\n\nThe question of incentive remains, not only in how to point towards adopting peer-to-peer systems, but also forming mental bridges connecting existing convention and future paradigm without leaning on technical language.\n\nWhat is the form?\n\nBy adopting familiar interface such as the pay-wall and choosing to deviate from established flow we can subvert expectation, creating opportunities to generate new meaning. What is now a tool of exclusion becomes one of inclusion; the wall becomes a path.\n\nInstead of creating systems of artificial scarcity to expensively host media on centralized servers behind pay-walls, we can consider creating systems of abundance by freely sharing the media (data) amongst those viewing it on distributed networks, thereby replacing capital transfer with resource exchange; you can view my data if you help make it available to others.\n\nIt’s important to acknowledge traditional pay-walls serve an array of purposes, not only in supporting infrastructure but also providing salaries to those producing the work.<sup>2</sup>\n\nSomeone encountering a pay-wall clearly engages with what is being viewed, otherwise the wall would not be reached. In attention economics simply applying more than a passing glance is a form of support, but increasingly extreme income inequality makes financial support a painful request when one can not pay for a meal by expending pure mental faculty.\n\nWhen so much wealth is centered around platforms requiring the data of billions of users, a short-cut to asserting change is through redistributing the media, data, and power amongst those creating it.\n\nEvolving the pay-wall and other tools of scarcity as means of cultivating peer-to-peer ideals may appear contradictory at first, but I propose a capable peer-to-peer culture should consider ways of introducing new meaning and setting new expectation of centralized platform convention through design. \n\n---\n\n1. Although a server is still often required to initially “seed” or act as a persistent peer for content on the peer-to-peer web, the current project is to cultivate data awareness. So yes—perhaps at the the end of the line your site is currently hosted on an Amazon CDN, however methods like the one detailed above will assist in migrating off platforms.\n\n2. Of course, employment and the nature of work are being rapidly redefined. It’s naive to approach future possibility squarely within a previous generation’s labor structure.","name":"2017-12-12-peer-paths","path":"/content/entries/2017-12-12-peer-paths","url":"/entries/2017-12-12-peer-paths","files":{},"pages":{}},"/entries/2017-12-27-sites":{"title":"Simple Sites","view":"entry","date":"17-12-27","tags":["www"],"text":"I want my sites to be focused and simple. Just a bunch of plain text files, some images. I want to turn those files into a site and update them without having to deal with a server, or apis, or build processes. I want it to be a calm thing. I want to share my site peer-to-peer and not depend on a centralized hosting platform. I want it to be easily archivable.\n\nEarlier this year I began working on [Enoki](http://enoki.site), inspired by a few of my favorite tools. It creates static sites with js, using files and folders instead of a database.\n\nAs opposed to site-making platforms, the [first attempt](https://github.com/jondashkyle/enoki-starterkit) was meant to be run locally first. I found it useful (I’m using it for this site now), however usage is limited to those capable of installing node/npm.\n \nThis is of course both good and bad.\n\nThe affordances of a tool are different than that of a platform; to learn a skill, and not develop a dependency on a service. Platforms are often designed for maximum usability and infinite growth. I wonder where the middle ground is with accessibility. Something between being unsure what to do when handed an object and the ease of a microwave.\n\nIn thinking about this, I began working on a hosted version of Enoki, complete with registration, accounts, and all the functionality you’d expect of a platform. The question of scale began influencing design decisions contradictory to the spirit of the project. It began feeling too much like a microwave.\n\nAround this time I decided to pause and take a step back.\n\n---\n\nSince then the [Beaker Browser](https://beakerbrowser.com/) team has continued to make substantial progress on their experimental peer-to-peer browser. [Brave Browser](https://www.brave.com/) has also announced intentions for Dat integration, which the Beaker team is using as opportunity to modularize some core functionality, making it possible to use the Dat web protocols within Electron apps.\n\nI organized [Peer-to-Peer Web / Los Angeles](https://peer-to-peer-web.com/los-angeles), which in addition to developers saw a relatively large attendance by people with artistic or publishing practices.\n\nNet neutrality was also repealed.\n\nNot only are there interesting projects creating a functional peer-to-peer and local-first web today, but there is active effort from big telecom to compromise the integrity of the internet, and how it works for people and not just corporations.\n\nI’m optimistic that in time this will create demand for peer-to-peer networking and local-first projects.\n\n---\n\nWith all this in mind, the past few months have been a refocusing for Enoki. Instead of continuing work on something growing increasingly large and complex, I shelved the idea of creating a hosted service for now.\n\nInstead, I’ve been drawing better boundaries around specific functionality within Enoki and creating modules. This not only makes it easier to iterate, but also sets the ideas free for others to use within their tools.\n\nThe first two modules to spin out of Enoki are [Smarkt](https://github.com/jondashkyle/smarkt) and [Hypha](https://github.com/jondashkyle/hypha). Smarkt is a hyper-readable structure for defining fields and values in plain text. Hypha transforms a directory of content into JSON.\n\nIt was important to me that Hypha works sync/async to be useful in Browserify builds where you must statically incline streams, and Beaker Browser which provides an async Web API for reading Dat Archives.\n\n[![](/entries/2017-12-27-sites/example.jpg)](https://beaker-hypha-jkm.hashbase.io/)\n\nAs a proof of concept, I created an example site which runs inside Beaker Browser. A bundled javascript application reads a `/content` directory to generate a site on the fly, letting you manage your content without needing to rebuild the source. The site is essentially a file browser.\n\nYou can access the example by navigating to [dat://beaker-hypha-jkm.hashbase.io/](dat://beaker-hypha-jkm.hashbase.io/) inside Beaker. If you’d like to poke around simply fork the site and make some changes inside `/content`.\n\nTo make changes to the app open `/source` in your terminal and run `npm install` and `npm start`. [Choo](https://choo.io) is used as a little front-end framework.\n\nThe page content is a collection of performances and interviews I like that have a similar to feeling to how I’d like these tools to feel.\n\n---\n\nI plan in time to re-integrate these tools with the Enoki Starter-kit, and perhaps create that hosted service too (obviously on the peer-to-peer web stack.)","name":"2017-12-27-sites","path":"/content/entries/2017-12-27-sites","url":"/entries/2017-12-27-sites","files":{"example.jpg":{"name":"example","path":"/content/entries/2017-12-27-sites/example.jpg","url":"/entries/2017-12-27-sites/example.jpg","source":"/content/entries/2017-12-27-sites/example.jpg","extension":".jpg","filename":"example.jpg","type":"image"}},"pages":{}},"/":{"title":"Jon-Kyle","view":"home","colophon":"This page is set in Lars Light by [Bold Decisions](https://bold-decisions.biz). It is hosted on the distributed web with [Dat](http://datproject.org), permanently seeded with [dathttpd](https://github.com/beakerbrowser/dathttpd), and published to [#_hashbase](http://hashbase.io). The source is [available to you](https://github.com/jondashkyle/jon-kyle.com).","name":"content","path":"/content","url":"/","files":{},"pages":{"about":{"name":"about","path":"/content/about","url":"/about","source":"/content/about"},"entries":{"name":"entries","path":"/content/entries","url":"/entries","source":"/content/entries"}}}}